import items.*
import overcooked.*
import wollok.game.*
import tiles.*


describe "I really like these tests :)"{
	var player = new Player(position=game.origin())
	var meat = new Meat(game.at(0,1))
	
	fixture {
		game.clear()
		player = new Player(position = game.origin())
		//meat.position(game.at(0,1))
		meat = new Meat(game.at(0,1))
	}
	
	test "A player can pickup an item that is in front of him" {
		assert.that(player.canPickup(meat))
	}

	test "A player can move to a specific position" {
		player.moveN(up, 3)
		player.moveN(right, 3)
		assert.equals(player.position(), game.at(3,3))
	}
	
	test "A player must be facing to the last direction he moved" {
		player.moveN(right, 4)
		player.moveN(left, 2)
		assert.equals(player.facingDirection(), left)
	}	
	
	test "A player can not pickup an item that is not in front of him" {
		meat.position(game. at(1,0))
		assert.notThat(player.canPickup(meat))
	}		
	
	test "A player can not pickup an item that is too far away from him" {
		meat.position(game. at(9,9))
		assert.notThat(player.canPickup(meat))
	}
	
	test "After picking up an item it must follow the player" {
		player.pickup()
		player.moveN(up, 4)
		assert.equals(meat.position(), game.at(0,5))
	}
	
	test "A picked item must always be in front of the player"{
		player.pickup()
		player.moveN(right, 5)
		assert.equals(meat.position(), game.at(6,0))
	}
	
	test "An item can not be dropped on top of another item that is not a container"{
		var anotherMeat = new Meat(game.at(9,0))
		player.pickup()
		player.moveN(right, 8)
		assert.notThat(player.canDropItem())
	}
	
	test "A player can drop an item"{
		player.pickup()
		player.moveN(up, 9)
		player.moveN(right, 4)
		assert.that(player.canDropItem())
	}


	//es importante usar player1/player2 por la menera rancia que tuve de hacer isPickable()
	test "An item can't be picked if its being picked by a player"{
		player1.position(game.origin())
		player1.pickup()
		assert.notThat(meat.isPickable())
	}
	
	test "A player can't pick an item from the other player's hands"{
		player2.position(game.at(0,2))
		player1.position(game.origin())
		player1.pickup()
		player2.faceTowards(down)
		player2.pickup()
		assert.notThat(player2.isPicking(meat))
	}
	
	test "A player can't walk through a desk"{
		new Desk(game.at(0,1))
		player.move(up)
		assert.equals(game.origin(),player.position() )	
		
	}
	test "A player can't walk out of bounds"{
		player.move(down)
		assert.equals(game.origin(),player.position())
	}
	
}
